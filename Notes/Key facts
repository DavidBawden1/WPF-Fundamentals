WPF Notes. 

1. Xaml doesnt need wpf & wpf doesnt need xaml. 
2. Anything that can be done in xaml can be done in code. 

Controls
1.Lookless control has no intrinsic look. 
2.Use markups to display looks based on scenarios. 

Framework element is the base of all controls. 

Layout - Panel types
1.Grid: enhanced table/grid-based layout.
2.Canvas: Fixed layout; also supports anchoring.
3.StackPanel: left to right or top to bottom.
4.DockPanel: Similar to Windows forms docking.
5.WrapPanel: flow-like formatting.

Data Binding 
1.Connects to objects or to xml. 
2.Uses information from objects and displays that to the screen.  
3.Data Templates superceeded winforms grids. 

Designers
1.Expression Blend

Range controls
1.Slider
2.Progress bar 
3.Scroll Bar

ListView vs List Box. ListView provides column headers!

Content Models           & Child Controls
ContentControl           | Button, Label
Headered Content Control | GroupBox, TabItem
Items Control            | ListBox, ComboBox
Headered Items Control   | MenuItem, TreeViewItem

each item in these controls is wrapped inside an item container. i.e ListBoxItem, ListViewItem and so on so forth.

Events and commands 
1.Bubbling starts from the child element and bubbles up to parent. 
2.Tunnelling starts from the parent and tunnnels down to the children elements. 
3.Direct events are raised at the target element.


Routed Events
1.The control the event is attached to becomes the sender. i.e. adding button click event handlers to a stack panel means the sender is the stack panel. 
	1. use the routedEventHandler Source to get the correct type. i.e. The button click event.

Command Class      & Example Commands
ApplicationCommands| Print, Copy, Save
ComponentCommands  | MoveDown, SelectToEnd, ScrollPageUp
EditingCommands    | ToggleBold, Delete
MediaCommands      | Pause, Play, IncreaseVolume
NavigationCommands | BrowseBack, Refresh

Layout process
1.Measure 
2.Arrange

Measure
1.Walk the UI Tree determine preferred sizes. Measures each control. Some controls require infinite space. 
2.Constrained or Unconstrained. Controls that are finite or infinite.  
3.Size to content. Elements return a finite amount of size they require. 

Arrange
1. rewalk the ui tree and assign required sizes and position
2. if images ask for more space than available. The image maybe rescaled. 
3. controls that require more space than available will be cropped. 

Margin & Padding
1. two values = horizontal, vertical
1. 4 values = left, top, right, bottom 

Alignment 
1. Vertical 
	1. Top 
	2. Center 
	3. Bottom 
	4. Stretch

2. Horizontal 
	1. Left
	2. Center 
	3. Right
	4. Stretch

Grids support: 
Column row & sizing
	1. Automatic 
	2. Fixed
	3. Proportional

Grid Splitters
1. Add to Cell 
	1. Set the orientation of the control 
		1. Vertical
		2. Horizontal
Resize columns & Rows when dragged

Panels
1. Dock panel 
2. Stack panel 
3. Wrap panel - runs out of space on one lne and then uses the next line. 

Canvas 
1. Absolute positioning 
2. Inflexible

ScrollViewer 
1. Provides unconstrained amounts of space to children. 

ViewBox - Content control - Rescales the content when it doesnt fit.

Navigation Window - Almost like a web Browser. 
1. Contains pages. 
2. Navigates between pages. 
Requires the StartUpUri with a reference to a page. Similar to winforms starting form. 

Graphics 
1. Brush 
	1. Solid colour brush 
		1.paints shapes in a uniform shade
	2. Linear Gradient Brush - self explanitory. 
	3. Radial Gradient Brush - Circular gradient. 

Shapes - These are Geometries, Geometries are abstract & part of the core api. 

Geometries don't know about the visual tree & have no intrinsic appearance.They require: Path or Drawing i.e. <Path.Fill><Path.Data><PathGeometry> and pass in values in order to display the shape with an outline set by those values.

Multi figure path Geometry. takes a collection of shapes and makes a more complex shape. 

Segment types 
1. LineSegment
2. PolyLineSegment
3. ArcSegment
4. QuadraticBezierSegment
5. PolyQuadraticBezierSegment
6. BezierSegement
7. PolyBezierSegment

Simple Geometries 
1. LineGeometry
2. RectangleGeometry 
3. EllipseGeometry

Combined Geometries - forms new shapes from two shapes for different scenarios 
1. Exclude
2. Intersect
3. Union
4. Xor

GeometryGroup - Useful when used with simple geometries. specifically for designing a shape that has a mixture of figures. 
 
Drawings - Drawing.Background can be used to display geometry. This is more performant than Path due to less items in the visual tree. 
Drawings are 1 element, like a bitmap. Don't expext to get much interaction from them. 

Animation
Uses triggers to start the animation. i.e. event trigger 